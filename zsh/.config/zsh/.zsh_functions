#!/usr/bin/env zsh

# Function to source files if they exist
function zsh_add_file() {
    [ -f "$ZDOTDIR/$1" ] && source "$ZDOTDIR/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then 
        # For plugins
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
    fi
}

function zsh_add_completion() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then 
        # For completions
		completion_file_path=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
		fpath+="$(dirname "${completion_file_path}")"
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
		fpath+=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
        [ -f $ZDOTDIR/.zccompdump ] && $ZDOTDIR/.zccompdump
    fi
	completion_file="$(basename "${completion_file_path}")"
	if [ "$2" = true ] && compinit "${completion_file:1}"
}

# FZF and RG functions
function rga-fzf-noline() {
	RG_PREFIX="rga --files-with-matches --hidden --column --no-heading --line-number --smart-case"
	local match="$(
		FZF_DEFAULT_COMMAND=$RG_PREFIX \
			fzf --ansi --sort \
                --preview "[[ ! -z {} ]] && rga --pretty --line-number --context 5 {q} {}" \
				--phony -q "$1" \
				--bind "change:reload:$RG_PREFIX {q}"
	)"
    local file=$(echo "$match" | cut -d':' -f1)
    if [[ -n $file ]]; then
        $EDITOR "$file"
    fi
}

function rga-fzf-line() {
    RG_PREFIX="rga --hidden --column --no-heading --line-number --smart-case"
    local match="$(
		FZF_DEFAULT_COMMAND=$RG_PREFIX \
            fzf --ansi --sort --delimiter : \
                --preview "[[ ! -z {1} ]] && rga --pretty --line-number --context 5 {q} {1}" \
				--phony -q "$1" \
				--bind "change:reload:$RG_PREFIX {q}"
      )"
    local file=$(echo "$match" | cut -d':' -f1)
    local linenumber=$(echo "$match" | cut -d':' -f2)
    if [[ -n $file ]]; then
        $EDITOR "$file" +$linenumber
    fi
}

function fzfpp() {
    fzf --ansi --sort --preview="[[ ! -z {} ]] && rga --line-number --pretty --context 5 {q} {}" \
}

# fkill - kill processes - list only the ones you can kill. Modified the earlier script.
function fkill() {
    local pid 
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi  

    if [ "x$pid" != "x" ]
    then
        echo $pid | xargs kill -${1:-9}
    fi  
}

function megamv() {
    rsmv "$1" /run/media/hristo/INTENTSO/
}

function toggle_opacity() {
    ~/.local/bin/toggle_alacritty_opacity
}

function clear_prompt() {
    clear
}
